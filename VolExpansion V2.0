//@version=4
strategy(shorttitle="BB_3SD",title="Vol Exp Breakout Strategy", overlay=true)

startDate = input(title="Start Date", type=input.integer,
     defval=1, minval=1, maxval=31)
startMonth = input(title="Start Month", type=input.integer,
     defval=1, minval=1, maxval=12)
startYear = input(title="Start Year", type=input.integer,
     defval=2018, minval=1900, maxval=2100)

endDate = input(title="End Date", type=input.integer,
     defval=31, minval=1, maxval=31)
endMonth = input(title="End Month", type=input.integer,
     defval=12, minval=1, maxval=12)
endYear = input(title="End Year", type=input.integer,
     defval=2030, minval=1900, maxval=2100)

inDateRange = (time >= timestamp(syminfo.timezone, startYear,
         startMonth, startDate, 0, 0)) and
     (time < timestamp(syminfo.timezone, endYear, endMonth, endDate, 0, 0))

//pyram  = input(1, "Pyramiding", minval=1)

TP_multiple = input(1.25, title="Target Multiple", type=input.float, minval=1.1)

length = input(20, minval=1)
src = input(close, title="Source")
mult = input(3.0, minval=0.001, maxval=50, title="StdDev")
basis = sma(src, length)
dev = mult * stdev(src, length)
upper = basis + dev
lower = basis - dev
offset = input(0, "Offset", type = input.integer, minval = -500, maxval = 500)
plot(basis, "Basis", color=#872323, offset = offset)
p1 = plot(upper, "Upper", color=color.teal, offset = offset)
p2 = plot(lower, "Lower", color=color.teal, offset = offset)
fill(p1, p2, title = "Background", color=#198787, transp=95)

crossUpper = crossover(close, upper)
crossLower = crossunder(close, lower)

// pos = 0

// long_signal  = nz(pos[1]) <  pyram and crossUpper

// short_signal = nz(pos[1]) > -pyram and crossLower

// pos := nz(pos[1]) < 0 and long_signal ? 1 :
//       long_signal ? nz(pos[1]) + 1 :
//       nz(pos[1]) > 0 and short_signal ? -1 :
//       short_signal ? nz(pos[1]) - 1 :
//       nz(pos[1])


// strategy.risk.max_position_size(100)

bprice = (crossUpper and inDateRange and time("D") and  hour(time) < 15 and strategy.position_size<=0) ? high+syminfo.mintick : na
sprice = (crossLower and inDateRange and time("D") and hour(time) < 15 and strategy.position_size>=0) ? low-syminfo.mintick : na

// initial Buy stop loss price
buy_slprice = valuewhen(not na(bprice), low-syminfo.mintick, 0)

// initial Sell stop loss price
sell_slprice = valuewhen(not na(sprice), high+syminfo.mintick, 0)

// long profit target
TP_long = bprice + ((bprice - buy_slprice) * TP_multiple)

// short profit target
TP_short = sprice - ((sell_slprice - sprice) * TP_multiple)

// Long entry
if (crossUpper and inDateRange and time("D") and hour(time) < 15 )
    strategy.entry("VolExpLE", strategy.long, stop=bprice, comment="VolExpLE")

// Long TP
strategy.exit(id="Buy Position TP", from_entry="VolExpLE", qty_percent=100, limit=TP_long, comment="Long TP")
    
// Long stop loss hit
strategy.exit(id="Buy Position SL", from_entry="VolExpLE", qty_percent=100, stop=buy_slprice, comment="Buy Position SL")

// Short entry
if (crossLower and inDateRange  and time("D") and hour(time) < 15 )
    strategy.entry("VolExpSE", strategy.short, stop=sprice, comment="VolExpSE")

// Short TP
strategy.exit(id="Sell Position TP", from_entry="VolExpSE", qty_percent=100, limit=TP_short, comment="Short TP")

// Short stop loss hit
strategy.exit(id="Sell Position SL", from_entry="VolExpSE", qty_percent=100, stop=sell_slprice, comment="Sell Position SL")

// Close all trades at 3:30 PM
strategy.close_all(when = time("D") and (hour(time) == 15 and minute(time) == 30), comment = "close all entries")
